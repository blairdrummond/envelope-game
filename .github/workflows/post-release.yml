name: Post Release

on:
  release:
    types:
      - published
  workflow_dispatch: {}

env:
  IMAGE_NAME: ghcr.io/liatrio/envelope-game
  NAMESPACE: envelope-game
  CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

jobs:
  get-tag:
    name: Get Image and Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      image-name: ${{ steps.tag.outputs.image-name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Tag
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
      # We can't just use the env var as a workflow input because of
      # weirdness with the scope of `env.`
      - name: Get Image from env var
        id: image-name
        run: echo ::set-output image-name=image-name::${IMAGE_NAME}

  build-scan-push:
    name: Build, Scan, and Push
    needs: get-tag
    uses: blairdrummond/github-workflows/.github/workflows/build-scan-push.yaml@main
    with:
      push: true
      image_name: ${{ needs.get-tag.outputs.image-name }}
      image_tag: ${{ needs.get-tag.outputs.tag }}
      registry_url: ghcr.io
      registry_username: ${{ secrets.CR_USER }}
    secrets:
      registry_password: ${{ secrets.CR_PAT }}

  retag-latest:
    runs-on: ubuntu-latest
    needs:
    - get-tag
    - build-scan-push
    steps:
      - uses: imjasonh/setup-crane@v0.1
      - run: |
          echo "${registry_password}" | crane auth login https://${registry_url} --username ${registry_url} --password-stdin
          crane tag ${{ env.IMAGE_NAME }}:${{ needs.get-tag.outputs.tag }} latest
        env:
          registry_url: ghcr.io
          registry_username: ${{ secrets.CR_USER }}
          registry_password: ${{ secrets.CR_PAT }}

  helm:
    needs: build-scan-push
    name: Helm Deploy Dev
    runs-on: [self-hosted, caf, prod]
    environment: envelope-game-dev
    steps:
      - name: AZ Login
        env:
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal -u "$CLIENT_ID" -p "$CLIENT_SECRET" --tenant "$TENANT_ID"

      - name: AKS Set Context
        uses: azure/aks-set-context@v2.1
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP_NAME }}

      - name: Install Helm
        uses: azure/setup-helm@v2.1
        id: install

      - name: 'Helm Deploy'
        run: |
          helm repo add envelope-game https://liatrio.github.io/envelope-game
          helm repo update
          helm upgrade --install envelope-game envelope-game/envelope-game --set image.name=${{ env.IMAGE_NAME }}:${{ needs.docker.outputs.tag }} -n ${{ env.NAMESPACE }}
